AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31

Parameters:
  Name:
    Type: String
    Default: lambda
    Description: Project name

Mappings:
  Constant:
    Value:
      FuncName: gtech-auto-posting-app-lambda
      LambdaMemorySize: 1024

Globals:
  Function:
    Runtime: python3.8
    Architectures:
      - x86_64
    Timeout: 300
    CodeUri: .

Resources:
  GTechAutoPostingLambdaRole:
      Type: AWS::IAM::Role
      Properties:
        PermissionsBoundary: !Sub "arn:aws:iam::${AWS::AccountId}:policy/GithubActionsIamResourcePermissionsBoundary"
        RoleName: !Sub "gtech-auto-posting-app-lambda-role-${AWS::Region}"
        AssumeRolePolicyDocument:
          Version: 2012-10-17
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action:
                - sts:AssumeRole

  GTechAutoPostingLambda:
    Type: AWS::Serverless::Function
    Properties:
      Description: Setting up gtech-auto-posting-app Lambda
      FunctionName: !FindInMap [ Constant, Value, FuncName ]
      Handler: !Join [ '.', [ !FindInMap [ Constant, Value, FuncName ], 'lambda_handler' ] ]
      Role: !Ref GTechAutoPostingLambdaRole
      MemorySize: !FindInMap [ Constant, Value, LambdaMemorySize ]

Outputs:
  GTechAutoPostingLambdaARN:
    Description: gtech-auto-posting-app Lambda ARN
    Value: !GetAtt  GTechAutoPostingLambda.Arn
    Export:
      Name: !Sub "${AWS::StackName}-ARN"
  GTechAutoPostingLambdaName:
    Description: gtech-auto-posting-app Lambda Name
    Value: !Ref GTechAutoPostingLambda
    Export:
      Name: !Sub "${AWS::StackName}-Name"