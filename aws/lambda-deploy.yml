AWSTemplateFormatVersion: '2010-09-09'
Description: Lambda Function

Parameters:
  Name:
    Type: String
    Default: lambda
    Description: Project name
  ImageUri:
    Type: String
    Default: Image
    Description: ECR Image full uri

Mappings:
  Constant:
    Value:
      FuncName: gtech-ad-posting-app-lambda
      LambdaMemorySize: 1024
      EphemeralStorageSize: 512

Resources:
  GTechADPostingLambda:
    Type: AWS::Lambda::Function
    Properties:
      Architectures:
        - x86_64
      Environment:
        Variables:
          region_name: !Sub ${AWS::Region}
          secret_name: gtechadapp/credentials
          gtechapp_bucket: gtech-posting-app
          ad_pic_s3_prefix: ad-picture-store/
          ad_html_s3_prefix: ad-html-script-store/
      EphemeralStorage:
        Size: !FindInMap [ Constant, Value, EphemeralStorageSize ]
      FunctionName: !FindInMap [ Constant, Value, FuncName ]
      Role: !ImportValue gtech-ad-posting-app-lambda-iam-role-ARN
      PackageType: Image
      Code:
        ImageUri: !Sub ${Image}
#      Handler: !Join [ '.', [ !FindInMap [ Constant, Value, FuncName ], 'lambda_handler' ] ]
#      Runtime: python3.9
      Timeout: 300
      MemorySize: !FindInMap [ Constant, Value, LambdaMemorySize ]

Outputs:
  GTechADPostingLambdaARN:
    Description: gtech-ad-posting-app Lambda ARN
    Value: !GetAtt  GTechADPostingLambda.Arn
    Export:
      Name: !Sub "${AWS::StackName}-ARN"
  GTechADPostingLambdaName:
    Description: gtech-ad-posting-app Lambda Name
    Value: !Ref GTechADPostingLambda
    Export:
      Name: !Sub "${AWS::StackName}-Name"