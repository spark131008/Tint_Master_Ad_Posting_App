# This is a basic workflow to help you get started with Actions

name: CI/CD

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch: {}

env:
  AWS_REGION: us-east-1                   # set this to your preferred AWS region, e.g. us-west-1

permissions:
  contents: read

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

#      # Runs a single command using the runners shell
#      - name: Run a one-line script
#        run: echo Hello, world!
#
#      # Runs a set of commands using the runners shell
#      - name: Run a multi-line script
#        run: |
#          echo Add other actions to build,
#          echo test, and deploy your project.

      - uses: actions/setup-python@v3
        with:
          python-version: "3.8"

      - uses: aws-actions/setup-sam@v2
        with:
          version: "1.46.0"

      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: SAM Build
        run: |
          sam build \
            --build-dir ./build \
            --base-dir ./lambda_code \
            --template-file ./aws//template.yaml \
            --manifest ./aws/requirements.txt

      - name: SAM Lambda deploy
        run: |
          sam deploy \
            --template-file build/template.yaml \
            --s3-bucket tint-master \
            --s3-prefix gtech-auto-posting-app \
            --region ${{ env.AWS_REGION }} \
            --stack-name gtech-auto-posting-app-lambda \
            --no-confirm-changeset \
            --no-fail-on-empty-changeset \
            --parameter-overrides Name=gtech-auto-posting-app
